#!/usr/bin/env bash

set -e

function add-pivnet-productfile () {
  filename="$1"

  echo "Adding $filename to Pivnet metadata"
  case "$filename" in
      *"aws"*)
        upload_as_name="AWS light Stemcell for ${OS_NAME}"
        ;;

      *"google"*)
        upload_as_name="GCP light Stemcell for ${OS_NAME}"
        ;;

      *"azure"*)
        upload_as_name="Azure light Stemcell for {$OS_NAME}"
        ;;

      *"vsphere"*)
        upload_as_name="vSphere Stemcell for {$OS_NAME}"
        ;;

      "stembuild-linux-x86_64"*)
        upload_as_name="Stembuild CLI for vSphere ${OS_NAME} (Linux)"
        ;;

      "stembuild-windows-x86_64"*)
        upload_as_name="Stembuild CLI for vSphere ${OS_NAME} (Windows)"
        ;;
      *)
       echo "Invalid filename: $filename, does not match: aws, azure, google, vsphere, stembuild-linux-x86_64 or stembuild-windows-x86_64"
       exit 1
  esac

  cat >> metadata <<EOF
  - file: pivnet-metadata/$filename
    upload_as: "$upload_as_name"
EOF
}

release_version=$( cat version/version | cut -d '.' -f1-2 )

cat > pivnet-metadata/metadata <<EOF
---
release:
  version: "${release_version}"
  release_type: Security Release
  eula_slug: "pivotal_software_eula"
  availability: Selected User Groups Only
  user_group_ids:
    - 164
  eccn: "5D002"
  license_exception: "ECCN"
product_files:
EOF

existing_release_version=$(cat pivnet-release/metadata.json | jq -r .Release.Version)

if [ $existing_release_version == $release_version ]; then
  echo "Pivnet Release ${release_version} exists, will retain existing release files"
  if [ "$(ls pivnet-release/*.tgz)" != "" ]; then
    mv pivnet-release/*.tgz pivnet-metadata/
  fi
  if [ "$(ls pivnet-release/stembuild*)" != "" ]; then
    mv pivnet-release/stembuild* pivnet-metadata/
  fi

else
  echo "Creating Pivnet Release ${release_version} for first time"
fi

mv file-to-upload/* pivnet-metadata

cd pivnet-metadata
for s in $(ls *.tgz)
  do
    add-pivnet-productfile "$s"
done

for s in $(ls stembuild*)
  do
    add-pivnet-productfile "$s"
done

cd ..

echo 'Release details:'
cat pivnet-metadata/metadata

echo 'Current files in release:'
ls pivnet-metadata/*stem*
