#!/usr/bin/env bash

set -e

function add-pivnet-productfile () {
  stemcell="$1"

  echo "Adding $stemcell to Pivnet metadata"

  cat >> metadata <<EOF
  - file: pivnet-metadata/$stemcell
    upload_as: "$stemcell Stemcell for $OS_NAME"
EOF
}

function add-stembuild-file() {
  stembuild="$1"

  echo "Adding $stembuild to Pivnet metadata"

  cat >> metadata <<EOF
      - file: pivnet-metadata/$stembuild
        upload_as: "Stembuild test for $OS_NAME"
EOF

}

stemcell=`ls stembuild/stembuild*`
stemcellname=stembuild4

cat > pivnet-metadata/folder-metadata <<EOF
---
release:
  version: "stembuild-promote-test"
  release_type: Beta Release
  eula_slug: "pivotal_beta_eula"
  availability: Selected User Groups Only
  user_group_ids:
    - 152
  eccn: ""
  license_exception: ""
file_groups:
  - name: "sample-group"
EOF

cp pivnet-metadata/folder-metadata pivnet-metadata/metadata

release_version=$(cat pivnet-release/metadata.json | jq -r .Release.Version)
echo "ls ***"
ls pivnet-release

echo "stembuild-promote-test" > stembuild/version

if [ "$(ls pivnet-release/stembuild*)" != "" ] && [[ $release_version == *"$(cat stembuild/version)"* ]]; then
    # should be either stemcell* or stembuild*
    mv pivnet-release/*stemcell* pivnet-metadata
    mv pivnet-release/stembuild* pivnet-metadata
fi

#mkdir pivnet-metadata/stembuild
mv stembuild/stembuild* pivnet-metadata

#mv pivnet-metadata/stembuild* pivnet-metadata/stembuild-test2

pushd pivnet-metadata
cat >> metadata <<EOF
    product_files:
EOF
for s in $(ls stembuild*)
  do
    add-stembuild-file "$s"
done
cat >> metadata <<EOF
product_files:
EOF
for s in $(ls *stemcell*)
  do
    add-pivnet-productfile "$s"
done
popd

echo 'Release details:'
cat pivnet-metadata/folder-metadata
echo
echo 'stembuilds:'
ls pivnet-metadata/stembuild*

cat pivnet-release/metadata.json
echo
echo $release_version
cat stembuild/version
