variables:
- &passed_all_wuts_jobs
  passed:
  - run-wuts-vsphere-2012R2
  - run-wuts-aws-2019
  - run-wuts-azure-2019
  - run-wuts-gcp-2019
  - run-wuts-vsphere-2019

resources:
# repos
- name: windows-utilities-tests
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/windows-utilities-tests.git
    private_key: ((WINDOWS_UTILITIES_TESTS_DEPLOY_KEY))
- name: windows-utilities-release
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/windows-utilities-release.git
    private_key: ((WINDOWS_UTILITIES_RELEASE_DEPLOY_KEY))
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: azstemcell
  type: git
  source:
    branch: master
    uri: https://github.com/pivotal-cf-experimental/azstemcell.git

# release
- name: windows-utilities-release-github
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: windows-utilities-release
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

# s3
- name: vsphere-2012R2-stemcell-rc
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2012R2/tested/vsphere/internal/bosh-stemcell-(.*)-vsphere-esxi-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: windows-utilities-release-semver
  type: semver
  source:
    bucket: all-bosh-windows
    key: versions/windows-utilities-release
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 0.9.0
- name: gcp-2019-stemcell-rc
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2019/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2019-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-2019-stemcell-rc
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2019/tested/vsphere/internal/bosh-stemcell-(.*)-vsphere-esxi-windows2019-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: aws-2019-stemcell-rc
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2019/tested/aws/light-bosh-stemcell-(.*)-aws-xen-hvm-windows2019-go_agent-us-east-1.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-2019-rc
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2019/tested/azure/light-bosh-stemcell-(.*)-azure-hyperv-windows2019-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-2019-stemcell-version
  type: semver
  source:
    bucket: all-bosh-windows
    key: 2019/versions/azure
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 2019.0.0
- name: azure-2019-vhd-uri
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2019/untested/azure/inputs/bosh-stemcell-(.*)-azure-vhd-uri.txt
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))


# locks
- name: vsphere-2012R2-lock
  type: pool
  source:
    branch: master
    pool: vsphere-2012R2
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: gcp-2019-lock
  type: pool
  source:
    branch: master
    pool: gcp-wuts-2019
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: vsphere-2019-lock
  type: pool
  source:
    branch: master
    pool: vsphere-2019
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: aws-2019-lock
  type: pool
  source:
    branch: master
    pool: aws-wuts-2019
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: azure-2019-lock
  type: pool
  source:
    branch: master
    pool: azure-wuts-2019
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks

- name: azure-download-lock
  type: pool
  source:
    branch: master
    pool: stemcells-azure
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks

# time
- name: sunday
  type: time
  source:
    days: [Sunday]
    start: 4:00 AM
    stop: 5:00 AM
    location: America/New_York

jobs:
- name: test-wuts-release
  serial: true
  plan:
  - get: ci
  - get: windows-utilities-tests
    trigger: true
  - task: test-wuts
    file: ci/tasks/test-wuts/task.yml

- name: test-utilities-release
  serial: true
  plan:
  - get: ci
  - get: windows-utilities-release
    trigger: true
  - task: test-utilities-release
    file: ci/tasks/test-utilities-release/task.yml

- name: run-wuts-vsphere-2012R2
  serial: true
  plan:
  - put: vsphere-2012R2-lock
    params:
      acquire: true
  - do:
    - in_parallel:
        fail_fast: true
        steps:
        - get: ci
        - get: windows-utilities-release
          trigger: true
          passed: [test-utilities-release]
        - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
          resource: windows-utilities-tests
          passed: [test-wuts-release]
        - get: bosh-windows-stemcell
          resource: vsphere-2012R2-stemcell-rc
        - get: sunday
          trigger: true
    - task: run-wuts
      tags: [vsphere-linux-worker]
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((regina_ca_cert))
        BOSH_CLIENT: ((regina_client))
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_ENVIRONMENT: ((regina_environment))
        BOSH_GW_USER: ((regina_gw_user))
        NETWORK: default
        SSH_TUNNEL_IP: ((regina_ssh_tunnel_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((regina_gw_private_key))
        SSH_TUNNEL_USER: ((regina_gw_user))
        STEMCELL_OS: windows2012R2
        STEMCELL_PATH: stemcell/bosh-stemcell-*-vsphere-esxi-windows2012R2-go_agent.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: default
    ensure:
      put: vsphere-2012R2-lock
      params:
        release: vsphere-2012R2-lock

- name: run-wuts-gcp-2019
  serial: true
  plan:
    - put: gcp-2019-lock
      params:
        acquire: true
    - do:
      - in_parallel:
          fail_fast: true
          steps:
          - get: ci
          - get: windows-utilities-release
            trigger: true
          - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
            resource: windows-utilities-tests
            passed: [test-wuts-release]
          - get: bosh-windows-stemcell
            resource: gcp-2019-stemcell-rc
          - get: sunday
            trigger: true
      - task: run-wuts
        file: ci/tasks/run-wuts/task.yml
        input_mapping: { stemcell: bosh-windows-stemcell }
        params:
          AZ: z1
          BOSH_CA_CERT: ((gcp_wuts_1_ca_cert))
          BOSH_CLIENT: ((gcp_wuts_1_client))
          BOSH_CLIENT_SECRET: ((gcp_wuts_1_client_secret))
          BOSH_ENVIRONMENT: ((gcp_wuts_1_environment))
          BOSH_GW_USER: ((gcp_wuts_1_gw_user))
          NETWORK: default
          SSH_TUNNEL_IP: ((gcp_wuts_1_jumpbox_ip))
          SSH_TUNNEL_PRIVATE_KEY: ((gcp_wuts_1_gw_private_key))
          SSH_TUNNEL_USER: ((gcp_wuts_1_gw_user))
          STEMCELL_OS: windows2019
          STEMCELL_PATH: stemcell/light-bosh-stemcell-*-google-kvm-windows2019-go_agent.tgz
          VM_EXTENSIONS: "100GB_ephemeral_disk"
          VM_TYPE: default
      ensure:
        put: gcp-2019-lock
        params:
          release: gcp-2019-lock
- name: run-wuts-vsphere-2019
  serial: true
  plan:
    - put: vsphere-2019-lock
      params:
        acquire: true
    - do:
      - in_parallel:
          fail_fast: true
          steps:
          - get: ci
          - get: windows-utilities-release
            trigger: true
          - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
            resource: windows-utilities-tests
            passed: [test-wuts-release]
          - get: bosh-windows-stemcell
            resource: vsphere-2019-stemcell-rc
          - get: sunday
            trigger: true
      - task: run-wuts
        tags: [vsphere-linux-worker]
        file: ci/tasks/run-wuts/task.yml
        input_mapping: { stemcell: bosh-windows-stemcell }
        params:
          AZ: z1
          BOSH_CA_CERT: ((regina_ca_cert))
          BOSH_CLIENT: ((regina_client))
          BOSH_CLIENT_SECRET: ((regina_client_secret))
          BOSH_ENVIRONMENT: ((regina_environment))
          BOSH_GW_USER: ((regina_gw_user))
          NETWORK: default
          SSH_TUNNEL_IP: ((regina_ssh_tunnel_ip))
          SSH_TUNNEL_PRIVATE_KEY: ((regina_gw_private_key))
          SSH_TUNNEL_USER: ((regina_gw_user))
          STEMCELL_OS: windows2019
          STEMCELL_PATH: stemcell/bosh-stemcell-*-vsphere-esxi-windows2019-go_agent.tgz
          VM_EXTENSIONS: ""
          VM_TYPE: default
      ensure:
        put: vsphere-2019-lock
        params:
          release: vsphere-2019-lock

- name: run-wuts-aws-2019
  serial: true
  plan:
    - put: aws-2019-lock
      params:
        acquire: true
    - do:
      - in_parallel:
          fail_fast: true
          steps:
          - get: ci
          - get: windows-utilities-release
            trigger: true
          - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
            resource: windows-utilities-tests
            passed: [test-wuts-release]
          - get: bosh-windows-stemcell
            resource: aws-2019-stemcell-rc
          - get: sunday
            trigger: true
      - task: run-wuts
        file: ci/tasks/run-wuts/task.yml
        input_mapping: { stemcell: bosh-windows-stemcell }
        params:
          AZ: z1
          BOSH_CA_CERT: ((AWS_BWATS_BOSH_TARGET_CERT))
          BOSH_CLIENT: ((AWS_BWATS_BOSH_USER))
          BOSH_CLIENT_SECRET: ((AWS_BWATS_BOSH_PASSWORD))
          BOSH_ENVIRONMENT: ((AWS_BWATS_DIRECTOR_IP))
          BOSH_GW_USER: ((AWS_BWATS_GW_USER))
          NETWORK: default
          SSH_TUNNEL_IP: ((AWS_BWATS_JUMPBOX_IP))
          SSH_TUNNEL_PRIVATE_KEY: ((AWS_BWATS_GW_PRIVATE_KEY))
          SSH_TUNNEL_USER: ((AWS_BWATS_GW_USER))
          STEMCELL_OS: windows2019
          STEMCELL_PATH: stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2019-go_agent-us-east-1.tgz
          VM_EXTENSIONS: ""
          VM_TYPE: large
      ensure:
        put: aws-2019-lock
        params:
          release: aws-2019-lock

- name: run-wuts-azure-2019
  serial: true
  plan:
    - do:
      - in_parallel:
          fail_fast: true
          steps:
          - get: azstemcell
          - get: ci
          - get: azure-2019-vhd-uri
          - get: windows-utilities-release
            trigger: true
          - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
            resource: windows-utilities-tests
            passed: [test-wuts-release]
          - get: bosh-windows-stemcell
            resource: azure-2019-rc
          - get: azure-2019-stemcell-version
          - get: sunday
            trigger: true
      - put: azure-download-lock
        params:
          acquire: true
      - do:
        - task: download-heavy
          file: ci/tasks/download-heavy-azure-stemcell/task.yml
          input_mapping:
            azure-build-number: azure-2019-stemcell-version
            azure-base-vhd-uri: azure-2019-vhd-uri
          tags: [azure-linux-worker]
          params:
            AZURE_SOURCE_KEY: ((KOALA_STORAGE_ACCESS_KEY))
            STEMCELL_OS: windows2019
            DESTINATION_DIR: heavy-stemcell
        ensure:
          put: azure-download-lock
          params:
            release: azure-download-lock
      - put: azure-2019-lock
        params:
          acquire: true
      - do:
        - task: run-wuts
          attempts: 3
          file: ci/tasks/run-wuts/task.yml
          tags: [azure-linux-worker]
          input_mapping: { stemcell: heavy-stemcell }
          params:
            AZ: z1
            BOSH_CA_CERT: ((AZURE_WUTS_BOSH_TARGET_CERT))
            BOSH_CLIENT: ((AZURE_WUTS_BOSH_CLIENT_ID))
            BOSH_CLIENT_SECRET: ((AZURE_WUTS_BOSH_CLIENT_SECRET))
            BOSH_ENVIRONMENT: ((AZURE_WUTS_BOSH_DIRECTOR_IP))
            BOSH_GW_USER: ((AZURE_WUTS_SSH_TUNNEL_USER))
            NETWORK: default
            SSH_TUNNEL_IP: ((AZURE_WUTS_SSH_TUNNEL_IP))
            SSH_TUNNEL_PRIVATE_KEY: ((AZURE_WUTS_SSH_TUNNEL_PRIVATE_KEY))
            SSH_TUNNEL_USER: ((AZURE_WUTS_SSH_TUNNEL_USER))
            STEMCELL_OS: windows2019
            STEMCELL_PATH: stemcell/*.tgz
            VM_EXTENSIONS: ""
            VM_TYPE: default
            WUTS_BOSH_TIMEOUT: 3h
        ensure:
          put: azure-2019-lock
          params:
            release: azure-2019-lock

- name: release-final
  serial: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: ci
      - get: windows-utilities-release
        <<: *passed_all_wuts_jobs
      - get: windows-utilities-tests
        <<: *passed_all_wuts_jobs
      - get: windows-utilities-release-semver
        params:
          bump: minor
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping:
      release: windows-utilities-release
      version: windows-utilities-release-semver
    params:
      RELEASE_NAME: windows-utilities
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
  - put: windows-utilities-release
    params:
      repository: finalized-release/release
      tag: windows-utilities-release-semver/number
  - put: windows-utilities-release-github
    params:
      name: windows-utilities-release-semver/number
      tag: windows-utilities-release-semver/number
      globs:
        - finalized-release/windows-utilities-*.tgz
  - put: windows-utilities-tests
    params:
      repository: windows-utilities-tests
      tag: windows-utilities-release-semver/number
      only_tag: true
  - put: windows-utilities-release-semver
    params:
      file: windows-utilities-release-semver/number
