resources:
# repos
- name: windows-utilities-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/windows-utilities-tests.git
- name: windows-utilities-release
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/windows-utilities-release.git
    private_key: ((WINDOWS_UTILITIES_RELEASE_DEPLOY_KEY))
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: azstemcell
  type: git
  source:
    branch: master
    uri: https://github.com/pivotal-cf-experimental/azstemcell.git

# s3
- name: gcp-2012R2-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2012R2/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-2012R2-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2012R2/tested/vsphere/internal/bosh-stemcell-(.*)-vsphere-esxi-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: aws-2012R2-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2012R2/tested/aws/light-bosh-stemcell-(.*)-aws-xen-hvm-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-2012R2-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2012R2/tested/azure/light-bosh-stemcell-(.*)-azure-hyperv-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-2012R2-stemcell-version
  type: semver
  source:
    bucket: all-bosh-windows
    key: 2012R2/versions/azure
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1200.0.0
- name: azure-2012R2-base-vhd-uri
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2012R2/untested/azure/inputs/bosh-stemcell-(.*)-azure-vhd-uri.txt
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

- name: windows-utilities-release-semver
  type: semver
  source:
    bucket: all-bosh-windows
    key: versions/windows-utilities-release
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 0.9.0

- name: gcp-1709-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1709/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-1709-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1709/tested/vsphere/internal/bosh-stemcell-(.*)-vsphere-esxi-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: aws-1709-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1709/tested/aws/light-bosh-stemcell-(.*)-aws-xen-hvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-1709-stemcell-release-candidate
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1709/tested/azure/light-bosh-stemcell-(.*)-azure-hyperv-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-1709-stemcell-version
  type: semver
  source:
    bucket: all-bosh-windows
    key: 1709/versions/azure
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1709.0.0
- name: azure-1709-base-vhd-uri
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 1709/untested/azure/inputs/bosh-stemcell-(.*)-azure-vhd-uri.txt
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

# locks
- name: mustang-lock
  type: pool
  source:
    branch: master
    pool: mustang
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: vsphere-director-lock
  type: pool
  source:
    branch: master
    pool: vsphere-director-lock
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: aws-lock
  type: pool
  source:
    branch: master
    pool: stemcells-aws
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: azure-lock
  type: pool
  source:
    branch: master
    pool: stemcells-azure
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks

- name: windows-utilities-release-github
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: windows-utilities-release
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

jobs:
- name: run-wuts-gcp-2012R2
  serial: true
  plan:
  - put: mustang-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: gcp-2012R2-stemcell-release-candidate
    - task: run-wuts
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((mustang_ca_cert))
        BOSH_CLIENT: ((mustang_client))
        BOSH_CLIENT_SECRET: ((mustang_client_secret))
        BOSH_GW_USER: ((mustang_gw_user))
        BOSH_TARGET: ((mustang_environment))
        NETWORK: default
        SSH_TUNNEL_IP: ((mustang_jumpbox_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((mustang_gw_private_key))
        SSH_TUNNEL_USER: ((mustang_gw_user))
        STEMCELL_OS: windows2012R2
        STEMCELL_PATH: stemcell/light-bosh-stemcell-*-google-kvm-windows2012R2-go_agent.tgz
        VM_EXTENSIONS: "100GB_ephemeral_disk"
        VM_TYPE: default
    ensure:
      put: mustang-lock
      params:
        release: mustang-lock
- name: run-wuts-vsphere-2012R2
  serial: true
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: vsphere-2012R2-stemcell-release-candidate
    - task: run-wuts
      tags: [vsphere-linux-worker]
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((regina_ca_cert))
        BOSH_CLIENT: ((regina_client))
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_TARGET: ((regina_environment))
        BOSH_GW_USER: ((regina_gw_user))
        NETWORK: default
        SSH_TUNNEL_IP: ((regina_ssh_tunnel_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((regina_gw_private_key))
        SSH_TUNNEL_USER: ((regina_gw_user))
        STEMCELL_OS: windows2012R2
        STEMCELL_PATH: stemcell/bosh-stemcell-*-vsphere-esxi-windows2012R2-go_agent.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: default
    ensure:
      put: vsphere-director-lock
      params:
        release: vsphere-director-lock

- name: run-wuts-aws-2012R2
  serial: true
  plan:
  - put: aws-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: aws-2012R2-stemcell-release-candidate
    - task: run-wuts
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((BOSH_CONCOURSE_BOSH_TARGET_CERT))
        BOSH_CLIENT: ((BOSH_CONCOURSE_BOSH_USER))
        BOSH_CLIENT_SECRET: ((BOSH_CONCOURSE_BOSH_PASSWORD))
        BOSH_GW_USER: ((BOSH_CONCOURSE_GW_USER))
        BOSH_TARGET: ((BOSH_CONCOURSE_DIRECTOR_IP))
        NETWORK: default
        SSH_TUNNEL_IP: ((BOSH_CONCOURSE_JUMPBOX_IP))
        SSH_TUNNEL_PRIVATE_KEY: ((BOSH_CONCOURSE_GW_PRIVATE_KEY))
        SSH_TUNNEL_USER: ((BOSH_CONCOURSE_GW_USER))
        STEMCELL_OS: windows2012R2
        STEMCELL_PATH: stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2012R2-go_agent.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: large
    ensure:
      put: aws-lock
      params:
        release: aws-lock

- name: run-wuts-azure-2012R2
  serial: true
  plan:
  - put: azure-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: azstemcell
      - get: ci
      - get: azure-2012R2-base-vhd-uri
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: azure-2012R2-stemcell-release-candidate
      - get: azure-2012R2-stemcell-version
    - task: download-heavy
      file: ci/tasks/bosh-windows-stemcell-builder/azure-download-heavy/task.yml
      input_mapping:
        azure-build-number: azure-2012R2-stemcell-version
        azure-base-vhd-uri: azure-2012R2-base-vhd-uri
      tags: [azure-linux-worker]
      params:
        AZURE_SOURCE_KEY: ((KOALA_STORAGE_ACCESS_KEY))
        STEMCELL_OS: windows2012R2
        DESTINATION_DIR: heavy-stemcell
    - task: run-wuts
      attempts: 3
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: heavy-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((DINGO_BOSH_TARGET_CERT))
        BOSH_CLIENT: ((DINGO_BOSH_CLIENT_ID))
        BOSH_CLIENT_SECRET: ((DINGO_BOSH_CLIENT_SECRET))
        BOSH_TARGET: ((DINGO_BOSH_DIRECTOR_IP))
        BOSH_GW_USER: ((DINGO_SSH_TUNNEL_USER))
        NETWORK: default
        SSH_TUNNEL_IP: ((DINGO_SSH_TUNNEL_IP))
        SSH_TUNNEL_PRIVATE_KEY: ((DINGO_SSH_TUNNEL_PRIVATE_KEY))
        SSH_TUNNEL_USER: ((DINGO_SSH_TUNNEL_USER))
        STEMCELL_OS: windows2012R2
        STEMCELL_PATH: stemcell/*.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: large
    ensure:
      put: azure-lock
      params:
        release: azure-lock

- name: run-wuts-gcp-1709
  serial: true
  plan:
  - put: mustang-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: gcp-1709-stemcell-release-candidate
    - task: run-wuts
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((mustang_ca_cert))
        BOSH_CLIENT: ((mustang_client))
        BOSH_CLIENT_SECRET: ((mustang_client_secret))
        BOSH_GW_USER: ((mustang_gw_user))
        BOSH_TARGET: ((mustang_environment))
        NETWORK: default
        SSH_TUNNEL_IP: ((mustang_jumpbox_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((mustang_gw_private_key))
        SSH_TUNNEL_USER: ((mustang_gw_user))
        STEMCELL_OS: windows2016
        STEMCELL_PATH: stemcell/light-bosh-stemcell-*-google-kvm-windows2016-go_agent.tgz
        VM_EXTENSIONS: "100GB_ephemeral_disk"
        VM_TYPE: default
    ensure:
      put: mustang-lock
      params:
        release: mustang-lock
- name: run-wuts-vsphere-1709
  serial: true
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: vsphere-1709-stemcell-release-candidate
    - task: run-wuts
      tags: [vsphere-linux-worker]
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((regina_ca_cert))
        BOSH_CLIENT: ((regina_client))
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_GW_USER: ((regina_gw_user))
        BOSH_TARGET: ((regina_environment))
        NETWORK: default
        SSH_TUNNEL_IP: ((regina_ssh_tunnel_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((regina_gw_private_key))
        SSH_TUNNEL_USER: ((regina_gw_user))
        STEMCELL_OS: windows2016
        STEMCELL_PATH: stemcell/bosh-stemcell-*-vsphere-esxi-windows2016-go_agent.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: default
    ensure:
      put: vsphere-director-lock
      params:
        release: vsphere-director-lock

- name: run-wuts-aws-1709
  serial: true
  plan:
  - put: aws-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: aws-1709-stemcell-release-candidate
    - task: run-wuts
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((BOSH_CONCOURSE_BOSH_TARGET_CERT))
        BOSH_CLIENT: ((BOSH_CONCOURSE_BOSH_USER))
        BOSH_CLIENT_SECRET: ((BOSH_CONCOURSE_BOSH_PASSWORD))
        BOSH_GW_USER: ((BOSH_CONCOURSE_GW_USER))
        BOSH_TARGET: ((BOSH_CONCOURSE_DIRECTOR_IP))
        NETWORK: default
        SSH_TUNNEL_IP: ((BOSH_CONCOURSE_JUMPBOX_IP))
        SSH_TUNNEL_PRIVATE_KEY: ((BOSH_CONCOURSE_GW_PRIVATE_KEY))
        SSH_TUNNEL_USER: ((BOSH_CONCOURSE_GW_USER))
        STEMCELL_OS: windows2016
        STEMCELL_PATH: stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2016-go_agent.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: large
    ensure:
      put: aws-lock
      params:
        release: aws-lock

- name: run-wuts-azure-1709
  serial: true
  plan:
  - put: azure-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: azstemcell
      - get: ci
      - get: azure-1709-base-vhd-uri
      - get: windows-utilities-release
        trigger: true
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
        trigger: true
      - get: bosh-windows-stemcell
        resource: azure-1709-stemcell-release-candidate
      - get: azure-1709-stemcell-version
    - task: download-heavy
      file: ci/tasks/bosh-windows-stemcell-builder/azure-download-heavy/task.yml
      input_mapping:
        azure-build-number: azure-1709-stemcell-version
        azure-base-vhd-uri: azure-1709-base-vhd-uri
      tags: [azure-linux-worker]
      params:
        AZURE_SOURCE_KEY: ((KOALA_STORAGE_ACCESS_KEY))
        STEMCELL_OS: windows2016
        DESTINATION_DIR: heavy-stemcell
    - task: run-wuts
      attempts: 3
      file: ci/tasks/run-wuts/task.yml
      input_mapping: { stemcell: heavy-stemcell }
      params:
        AZ: z1
        BOSH_CA_CERT: ((DINGO_BOSH_TARGET_CERT))
        BOSH_CLIENT: ((DINGO_BOSH_CLIENT_ID))
        BOSH_CLIENT_SECRET: ((DINGO_BOSH_CLIENT_SECRET))
        BOSH_TARGET: ((DINGO_BOSH_DIRECTOR_IP))
        BOSH_GW_USER: ((DINGO_SSH_TUNNEL_USER))
        NETWORK: default
        SSH_TUNNEL_IP: ((DINGO_SSH_TUNNEL_IP))
        SSH_TUNNEL_PRIVATE_KEY: ((DINGO_SSH_TUNNEL_PRIVATE_KEY))
        SSH_TUNNEL_USER: ((DINGO_SSH_TUNNEL_USER))
        STEMCELL_OS: windows2016
        STEMCELL_PATH: stemcell/*.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: default
    ensure:
      put: azure-lock
      params:
        release: azure-lock

- name: release-final
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windows-utilities-release
      passed:
      - run-wuts-aws-2012R2
      - run-wuts-azure-2012R2
      - run-wuts-gcp-2012R2
      - run-wuts-vsphere-2012R2
      - run-wuts-aws-1709
      - run-wuts-azure-1709
      - run-wuts-gcp-1709
      - run-wuts-vsphere-1709
    - get: windows-utilities-release-semver
      params:
        bump: minor
  - task: finalize-release
    file: ci/tasks/finalize-release/task.yml
    input_mapping:
      release: windows-utilities-release
      version: windows-utilities-release-semver
    params:
      RELEASE_NAME: windows-utilities
      AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
  - put: windows-utilities-release
    params:
      repository: finalized-release/release
      tag: windows-utilities-release-semver/number
  - put: windows-utilities-release-semver
    params:
      file: windows-utilities-release-semver/number
  - put: windows-utilities-release-github
    params:
      name: windows-utilities-release-semver/number
      tag: windows-utilities-release-semver/number
      globs:
      - finalized-release/windows-utilities-*.tgz
