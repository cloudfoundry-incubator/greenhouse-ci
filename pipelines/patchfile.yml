resource_types:
- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource

resources:

# git
- name: ci
  type: git
  source:
    branch: ((CI_BRANCH))
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: stemcell-builder
  type: git
  source:
    branch: ((STEMCELL_BUILDER_BRANCH))
    uri: git@github.com:cloudfoundry-incubator/bosh-windows-stemcell-builder.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_BOSH_WINDOWS_STEMCELL_BUILDER_DEPLOY_KEY))
- name: windows-stemcell-dependencies
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/windows-stemcell-dependencies.git
    private_key: ((PIVOTAL-CF_WINDOWS-STEMCELL-DEPENDENCIES_PRIVATE_KEY))
- name: windows-utilities-release
  type: git
  source:
    tag_filter: "*"
    uri: https://github.com/cloudfoundry-incubator/windows-utilities-release.git
- name: windows-utilities-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/windows-utilities-tests.git

# releases
- name: openssh-release
  type: github-release
  source:
    user: PowerShell
    repository: Win32-OpenSSH
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

- name: stempatch
  type: github-release
  source:
    owner: pivotal-cf
    repository: stempatch
    pre_release: true
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

# semvers
- name: patchfile-version
  type: semver
  source:
    bucket: ((ROOT_BUCKET))
    key: ((BASE_FOLDER_NAME))/versions/vsphere-((PIPELINE_NAME))
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: ((STEMCELL_INITIAL_VERSION))

# s3
- name: vhd
  type: s3
  source:
    bucket: ((ROOT_BUCKET))
    regexp: ((BASE_FOLDER_NAME))/untested/vsphere/diffcell/inputs/Windows-Server-Datacenter-Core-((BASE_FOLDER_NAME))-with-Containers-(.*)-en.us-30GB.vhd
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: ovftool
  type: s3
  source:
    bucket: ((ROOT_BUCKET))
    regexp: VMware-ovftool-(.*)-lin.x86_64.bundle
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-manifest-untested
  type: s3
  source:
    bucket: ((ROOT_BUCKET))
    regexp: ((BASE_FOLDER_NAME))/untested/vsphere/diffcell/patchfiles/patchfile-(.*)-.*.yml
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-manifest-tested
  type: s3
  source:
    bucket: ((ROOT_BUCKET))
    regexp: ((BASE_FOLDER_NAME))/tested/vsphere/diffcell/patchfiles/patchfile-(.*)-.*.yml
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-from-patchfile-untested
  type: s3
  source:
    bucket: ((ROOT_BUCKET))
    regexp: ((BASE_FOLDER_NAME))/untested/vsphere/diffcell/bosh-stemcell-(.*)-patch-vsphere-esxi-((STEMCELL_OS_NAME))-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-from-patchfile-tested
  type: s3
  source:
    bucket: ((ROOT_BUCKET))
    regexp: ((BASE_FOLDER_NAME))/tested/vsphere/diffcell/bosh-stemcell-(.*)-patch-vsphere-esxi-((STEMCELL_OS_NAME))-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

# locks
- name: vsphere-director-lock
  type: pool
  source:
    branch: master
    pool: ((VSPHERE_POOL_NAME))
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks

jobs:
- name: build
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
      trigger: true
    - get: windows-stemcell-dependencies
    - get: version
      resource: patchfile-version
      params:
        bump: patch
  - put: patchfile-version
    params:
      file: version/number

- name: create-vsphere-patchfile
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
      passed: [build]
    - get: windows-stemcell-dependencies
    - get: version
      resource: patchfile-version
      passed: [build]
      trigger: true
    - get: sshd
      resource: openssh-release
      version: { tag: ((OPEN_SSH_VERSION)) }
  - put: version
    resource: patchfile-version
    params:
      pre: build
  - task: create-patchfile
    privileged: true
    file: ci/tasks/bosh-windows-stemcell-builder/create-vsphere-patchfile/task.yml
    tags: [diffcell-windows-worker]
    params:
      ADMINISTRATOR_PASSWORD: "Password123!"
      OS_VERSION: ((STEMCELL_OS_NAME))
      PRODUCT_KEY: 2HXDN-KRXHB-GPYC7-YCKFJ-7FVDG # Test key from https://docs.microsoft.com/en-us/windows-server/get-started/kmsclientkeys
      ORGANIZATION: Pivotal
      OWNER: Pivotal
      OUTPUT_DIR: ../patchfile-manifest
      MANIFEST_DIRECTORY: ../manifest
      STEMCELL_DEPS_DIR: ../windows-stemcell-dependencies
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      AWS_REGION: us-east-1
      VHD_VMDK_BUCKET: ((VHD_VMDK_BUCKET))
      AZURE_CONTAINER_NAME: ((AZURE_PATCHFILE_CONTAINER_NAME))
      AZURE_STORAGE_ACCESS_KEY: ((AZURE_PATCHFILE_STORAGE_ACCESS_KEY))
      AZURE_STORAGE_ACCOUNT_NAME: ((AZURE_PATCHFILE_STORAGE_ACCOUNT_NAME))
      CACHE_DIR: "C:\\image-data"
  - put: vsphere-manifest-untested
    params:
      file: manifest/*.yml
  - task: pause-to-wait-for-concourse-resource-check
    config:
      platform: linux
      image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
      run:
        path: sleep
        args:
        - 60

- name: create-vsphere-stemcell-from-patchfile
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: version
      passed: [create-vsphere-patchfile]
      resource: patchfile-version
      trigger: true
    - get: stempatch
    - get: vhd
      resource: vhd
    - get: ovftool
    - get: stemcell-builder
      passed: [create-vsphere-patchfile]
    - get: patchfile-manifest
      resource: vsphere-manifest-untested
      passed: [create-vsphere-patchfile]
  - task: build-stemcell
    file: ci/tasks/bosh-windows-stemcell-builder/create-vsphere-stemcell-from-patchfile/task.yml
    params:
      OS_VERSION: ((PATCHFILE_OS_VERSION))
      OUTPUT_DIR: patchfile-stemcell
  - put: vsphere-stemcell-from-patchfile-untested
    params:
      file: patchfile-stemcell/bosh-stemcell-*-patch-vsphere-esxi-((STEMCELL_OS_NAME))-go_agent.tgz


- name: test-vsphere-stemcell-from-patchfile
  serial_groups: ["vsphere-director"]
  serial: true
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: bosh-windows-stemcell
        passed: [create-vsphere-stemcell-from-patchfile]
        resource: vsphere-stemcell-from-patchfile-untested
      - get: vsphere-manifest-untested
        passed: [create-vsphere-stemcell-from-patchfile]
      - get: vhd
        passed: [create-vsphere-stemcell-from-patchfile]
      - get: vsphere-stemcell-from-patchfile-untested
        passed: [create-vsphere-stemcell-from-patchfile]
      - get: stemcell-builder
        passed: [create-vsphere-stemcell-from-patchfile]
      - get: version
        resource: patchfile-version
        passed: [create-vsphere-stemcell-from-patchfile]
        trigger: true
    - task: test-stemcell
      tags: [vsphere-linux-worker]
      file: ci/tasks/bosh-windows-stemcell-builder/bwats/task.yml
      input_mapping: { stemcell: bosh-windows-stemcell }
      params:
        BOSH_CA_CERT: ((regina_ca_cert))
        BOSH_CLIENT: ((regina_client))
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_ENVIRONMENT: ((regina_environment))
        SSH_TUNNEL_IP: ((regina_ssh_tunnel_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((regina_gw_private_key))
        SSH_TUNNEL_USER: ((regina_gw_user))
        STEMCELL_OS: ((STEMCELL_OS_NAME))
        STEMCELL_PATH: stemcell/bosh-stemcell-*-patch-vsphere-esxi-((STEMCELL_OS_NAME))-go_agent.tgz
        VM_TYPE: large
        VM_EXTENSIONS: 10GB_ephemeral_disk
        MOUNT_EPHEMERAL_DISK: true
        SKIP_MS_UPDATE_TEST: true
    - put: vsphere-stemcell-from-patchfile-tested
      params:
        file: bosh-windows-stemcell/bosh-stemcell-*-patch-vsphere-esxi-((STEMCELL_OS_NAME))-go_agent.tgz
    - put: vsphere-manifest-tested
      params:
        file: vsphere-manifest-untested/*.yml
    ensure:
      put: vsphere-director-lock
      params:
        release: vsphere-director-lock

- name: wuts-vsphere-from-patchfile
  serial: true
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: windows-utilities-release
      - get: src/github.com/cloudfoundry-incubator/windows-utilities-tests
        resource: windows-utilities-tests
      - get: vhd
        passed: [test-vsphere-stemcell-from-patchfile]
      - get: bosh-windows-stemcell
        resource: vsphere-stemcell-from-patchfile-tested
        passed: [test-vsphere-stemcell-from-patchfile]
        trigger: true
      - get: manifest
        passed: [test-vsphere-stemcell-from-patchfile]
        resource: vsphere-manifest-tested
      - get: stemcell-builder
        passed: [test-vsphere-stemcell-from-patchfile]
      - get: version
        resource: patchfile-version
        passed: [test-vsphere-stemcell-from-patchfile]
    - task: run-wuts
      tags: [vsphere-linux-worker]
      file: ci/tasks/run-wuts/task.yml
      input_mapping:
        stemcell: bosh-windows-stemcell
      params:
        AZ: z1
        BOSH_CA_CERT: ((regina_ca_cert))
        BOSH_CLIENT: ((regina_client))
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_ENVIRONMENT: ((regina_environment))
        BOSH_GW_USER: ((regina_gw_user))
        NETWORK: default
        SSH_TUNNEL_IP: ((regina_ssh_tunnel_ip))
        SSH_TUNNEL_PRIVATE_KEY: ((regina_gw_private_key))
        SSH_TUNNEL_USER: ((regina_gw_user))
        STEMCELL_OS: ((STEMCELL_OS_NAME))
        STEMCELL_PATH: stemcell/bosh-stemcell-*-patch-vsphere-esxi-((STEMCELL_OS_NAME))-go_agent.tgz
        VM_EXTENSIONS: ""
        VM_TYPE: default
    ensure:
      put: vsphere-director-lock
      params:
        release: vsphere-director-lock